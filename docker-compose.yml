services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./frontend:/app
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www
    ports:
      - "${PORT:-8080}:8080"
    depends_on:
      - db
    networks:
      - app_network
    environment:
      PORT: 8080
      DB_CONNECTION: mysql
      DB_HOST: db  # Utilisation de l'hôte 'db' comme nom du service Docker
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}  # Variable d'environnement depuis GitHub Secrets
      DB_USERNAME: ${DB_USERNAME}  # Variable d'environnement depuis GitHub Secrets
      DB_PASSWORD: ${DB_PASSWORD}  # Variable d'environnement depuis GitHub Secrets
      APP_KEY: ${APP_KEY}  # Ajouter la clé d'application si nécessaire
      APP_URL: ${APP_URL}  # Utiliser l'URL si nécessaire

  composer:
    image: composer:latest
    container_name: composer-installer
    working_dir: /var/www/backend
    volumes:
      - ./backend:/var/www/backend
    command: ["composer", "install"]

  db:
    image: mysql:8.0
    container_name: my-mysql
    restart: always
    environment:
     MYSQL_ROOT_PASSWORD: root  # Ajoute cette ligne avec ton mot de passe root
     MYSQL_DATABASE: ofour      # Nom de la base de données à créer
     MYSQL_USER: user           # Nom d'utilisateur pour accéder à la DB
     MYSQL_PASSWORD: user  # Utiliser une variable d'environnement pour la base de données
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    command: --lower_case_table_names=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--host=localhost", "--user=root", "--password=${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
