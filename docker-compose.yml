version: '3.9'

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app_network


  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Monte le fichier de config Nginx
      - ./nginx/ssl:/etc/nginx/ssl                # Monte les certificats SSL
      - ./frontend/dist:/app/dist                 # Monte les fichiers du frontend
    ports:
      - "80:80"                                   # Expose le port HTTP
      - "443:443"                                 # Expose le port HTTPS
    depends_on:
      - backend                                   # Assure-toi que le backend démarre avant Nginx
      - frontend                                  # Assure-toi que le frontend démarre avant Nginx
    networks:
      - app_network


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app_network
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ofour
      DB_USERNAME: appuser
      DB_PASSWORD: apppassword
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mariadb:10.5
    container_name: my-mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ofour
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    command: --lower_case_table_names=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--host=localhost", "--user=root", "--password=root"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
