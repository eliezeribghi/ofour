name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}  # Utilisation du secret pour le mot de passe root
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}  # Nom de la base de données depuis les secrets
          MYSQL_USER: ${{ secrets.MYSQL_USER }}  # Utilisation d'un secret pour l'utilisateur
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}  # Mot de passe de l'utilisateur depuis les secrets
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      # Étape 1: Vérifier le code du dépôt
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2: Configurer PHP et installer les dépendances
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.0'
          extensions: mbstring, xml, bcmath, curl, zip

      # Étape 3: Copier le fichier .env depuis le secret
      - name: Copy .env file
        run: echo "$MY_ENV_FILE" > ./backend/.env
        env:
          MY_ENV_FILE: ${{ secrets.MY_ENV_FILE }}  # Récupère le contenu du fichier .env depuis GitHub Secrets

      # Étape 4: Installer les dépendances Composer
      - name: Install Composer dependencies
        working-directory: ./backend
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      # Étape 5: Générer la clé d'application (si nécessaire)
      - name: Generate APP_KEY
        working-directory: ./backend
        run: php artisan key:generate

      # Étape 6: Attendre que la base de données soit prête
      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      # Étape 7: Exécuter les migrations de la base de données
      - name: Run database migrations
        working-directory: ./backend
        run: php artisan migrate --env=testing

      # Étape 8: Lancer les tests
      - name: Run tests
        working-directory: ./backend
        run: php artisan test --no-interaction
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql  # Utilise le service mysql défini dans le workflow
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}  # Utilise le secret pour la base de données
          DB_USERNAME: ${{ secrets.DB_USERNAME }}  # Utilise le secret pour l'utilisateur
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}  # Utilise le secret pour le mot de passe
